.main-0-2-9 {
    /*#region Element */
    //#region typos
    font-size: var(--elm-fontSize);
    font-family: var(--elm-fontFamily);
    font-weight: var(--elm-fontWeight);
    font-style: var(--elm-fontStyle);
    text-decoration: var(--elm-textDecoration);
    line-height: var(--elm-lineHeight);
    //#endregion typos
    
    //#region foreg, backg, borders
    color: var(--ns-foregFn);
    background: var(--ns-backgFn);

    // borders:
    border: var(--elm-border);
    border-color: var(--ns-borderFn);
    //#endregion foreg, backg, borders

    opacity: var(--elm-opacity);
    
    transition: var(--elm-transition);
    
    box-shadow: var(--elm-boxShadow);

    filter: var(--elm-filter);
    /*#endregion Element */



    /*#region containerGridBasicStyle */
    display: grid;
    grid-template-columns: var(--con-paddingInline) auto var(--con-paddingInline);
    grid-template-rows: var(--con-paddingBlock) auto var(--con-paddingBlock);
    grid-template-areas: "...         blockStart       ..." "inlineStart  content   inlineEnd" "...          blockEnd        ...";
    
    border-inline: var(--con-borderInline);
    border-block: var(--con-borderBlock);
    border-radius: var(--con-borderRadius);
    /*#endregion containerGridBasicStyle */
    


    /* layout: */
    justify-items: var(--mdl-horzAlign);
    align-items: var(--mdl-vertAlign);

    

    /* sizes: */
    box-sizing: border-box;
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;



    /*#region scrollers: */
    &, &>*>.body {
        overflow: auto;
    }
    /*#endregion scrollers: */


    
    /* apply fn props: */
    animation: var(--ns-overlayAnimFn);
    --ns-animFnFw: var(--ns-animFn);


    
    
    /*#region backup cardProps */
    --elm-backgBak: var(--elm-backg);
    --elm-boxShadowBak: var(--elm-boxShadow);
    /*#endregion backup cardProps */


    &>* {
        /*#region clear browser's default styles */
        &:focus {
          outline: unset;
        }
        /*#endregion clear browser's default styles */
      
      
        /*#region force overwrite */
        &:not(._) {
            // layout:
            grid-area: content;
    
            // sizes:
            box-sizing: border-box;
            inline-size: max-content;
            block-size: max-content;
    
            // apply fn props:
            animation: var(--ns-animFnFw);
    
            // overwrite cardProps
            --elm-backg: var(--mdl-backg);
            --elm-boxShadow: var(--mdl-boxShadow);
        }
        /*#endregion force overwrite */
        
        
        
        /*#region restore cardProps */
        &>* {
            --elm-backg: var(--elm-backgBak);
            --elm-boxShadow: var(--elm-boxShadowBak);
        }
        /*#endregion restore cardProps */
    }


    //#region psedudo elm for filling the end of horz & vert scroll
    &::before, &::after {
        content: "";
        display: block;

        justify-self: stretch;
        align-self: stretch;

        visibility: hidden;
    }
    &::before {
        grid-area: inlineEnd;
    }
    &::after {
        grid-area: blockEnd;
    }
    //#endregion psedudo elm for filling the end of horz & vert scroll



    // customize:
    // -- none --



    // indicationStates
    --ns-animActivePassive: var(--elm-animNone);
    --ns-overlayAnimActivePassive: var(--elm-animNone);

    &.active, &.actived {
        --ns-animActivePassive: var(--mdl-animActive);
        --ns-overlayAnimActivePassive: var(--mdl-overlayAnimActive);
    }
    &.passive {
        --ns-animActivePassive: var(--mdl-animPassive);
        --ns-overlayAnimActivePassive: var(--mdl-overlayAnimPassive);
    }
    &:not(.active):not(.actived):not(.passive) {
        display: none;
    }
    &.actived:not(.enable):not(.disable):not(.active):not(.passive) {
        animation-duration: 0ms !important;
    }



    // indicationAnimFn
    --ns-animFn: var(--elm-anim), var(--ns-animActivePassive);
    --ns-overlayAnimFn: var(--ns-overlayAnimActivePassive);



    // Element::themesIf
    --ns-foregIf: var(--elm-foreg);
    --ns-backgIf: var(--ns-backgNone);
    --ns-borderIf: var(--elm-borderColor);
    --ns-boxShadowFocusIf: var(--col-secondaryTransp);
    --ns-outlinedForegIf: var(--elm-foreg);

    // Element::toggleOffGradient
    --ns-backgGradTg: unset;

    // Element::toggleOffOutlined
    --ns-outlinedBackgTg: unset;
    --ns-outlinedForegTg: unset;


    // Element::propsFn
    --ns-backgNone: linear-gradient(transparent,transparent) border-box;
    --ns-foregFn: var(--ns-outlinedForegTg,var(--ns-foregIfIf,var(--ns-foregTh,var(--ns-foregIf))));
    --ns-backgLy: var(--ns-backgGradTg,var(--ns-backgNone)), var(--ns-backgIfIf,var(--ns-backgTh,var(--ns-backgIf))), var(--elm-backg);
    --ns-backgFn: var(--ns-outlinedBackgTg,var(--ns-backgLy));
    --ns-borderFn: var(--ns-outlinedForegTg,var(--ns-borderIfIf,var(--ns-borderTh,var(--ns-borderIf))));
    --ns-boxShadowFocusFn: var(--elm-boxShadowFocus) var(--ns-boxShadowFocusIfIf,var(--ns-boxShadowFocusTh,var(--ns-boxShadowFocusIf)));
    --ns-outlinedForegFn: var(--ns-outlinedForegIfIf,var(--ns-outlinedForegTh,var(--ns-outlinedForegIf)));
    --ns-outlinedBackgFn: var(--ns-backgGradTg,var(--ns-backgNone));
}



// scrollableStyle
.main-0-2-9.scrollable>*:not(._) {
    inline-size: auto;
    max-inline-size: 100%;
    
    block-size: auto;
    max-block-size: 100%;

    overflow: auto;
}


// bodyStyle
.body-0-2-10 {
  overflow: hidden;
}


// actionBarStyle
.actionBar-0-2-11 {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    &>:first-child:last-child {
      margin-inline-start: auto;
    }
}

